// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot test 1`] = `
{
  "Outputs": {
    "goauthapigetbastionkeycommand": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws ssm get-parameter --name /ec2/keypair/",
            {
              "Fn::GetAtt": [
                "goauthapibastionkey",
                "KeyPairId",
              ],
            },
            " --region ",
            {
              "Ref": "AWS::Region",
            },
            " --with-decryption --query Parameter.Value --output text",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amikernel510hvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-kernel-5.10-hvm-x86_64-gp2",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
    "SsmParameterValuestagegoauthapidbdatabaseC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/stage/go-auth-api/db/database",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuestagegoauthapidbportC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/stage/go-auth-api/db/port",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuestagegoauthapidbuserC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/stage/go-auth-api/db/user",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuestagegoauthapidnszoneIDC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/stage/go-auth-api/dns/zoneID",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValuestagegoauthapidnszoneNameC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/stage/go-auth-api/dns/zoneName",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ecsTaskExecutionRole34F54B99": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "ECS execution role",
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
              ],
            ],
          },
        ],
        "RoleName": "go-auth-api-ecsTaskExecutionRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "ecsTaskExecutionRoleDefaultPolicy647C5358": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kms:Decrypt",
                "secretsmanager:GetSecretValue",
                "ssm:GetParameters",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:kms:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":key/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:secretsmanager:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":secret:*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:ssm:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:BatchGetImage",
                "ecr:GetDownloadUrlForLayer",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":repository/",
                    {
                      "Fn::Sub": "cdk-hnb659fds-container-assets-\${AWS::AccountId}-\${AWS::Region}",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "goauthapilog92D7EFB8",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "ssm:DescribeParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
                "ssm:GetParameters",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/stage/go-auth-api/db/pass",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ecsTaskExecutionRoleDefaultPolicy647C5358",
        "Roles": [
          {
            "Ref": "ecsTaskExecutionRole34F54B99",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "goauthapialb7417EE95": {
      "DependsOn": [
        "goauthapiapppublicsubnet1aDefaultRoute062449F5",
        "goauthapiapppublicsubnet1aRouteTableAssociation2B6018D6",
        "goauthapiapppublicsubnet1cDefaultRouteCB680EBF",
        "goauthapiapppublicsubnet1cRouteTableAssociationA0868B6A",
      ],
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Name": "go-auth-api-alb",
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "goauthapialbsgF17A1428",
              "GroupId",
            ],
          },
        ],
        "Subnets": [
          {
            "Ref": "goauthapiapppublicsubnet1aSubnet35BBFA9E",
          },
          {
            "Ref": "goauthapiapppublicsubnet1cSubnet13708802",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "goauthapialbgoauthapialbhttplistener5449924C": {
      "Properties": {
        "DefaultActions": [
          {
            "RedirectConfig": {
              "Port": "443",
              "Protocol": "HTTPS",
              "StatusCode": "HTTP_302",
            },
            "Type": "redirect",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "goauthapialb7417EE95",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "goauthapialbgoauthapialbhttpslistener64C5C27A": {
      "Properties": {
        "Certificates": [
          {
            "CertificateArn": {
              "Fn::Join": [
                "",
                [
                  "arn:aws:acm:ap-northeast-1:",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":certificate/74569e27-ef21-4729-a423-e0515fa983db",
                ],
              ],
            },
          },
        ],
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "goauthapialbtargetgroupD6F4F6F0",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "goauthapialb7417EE95",
        },
        "Port": 443,
        "Protocol": "HTTPS",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "goauthapialbsgF17A1428": {
      "Properties": {
        "GroupDescription": "TestStack/go-auth-api-alb-sg",
        "GroupName": "go-auth-api-alb-sg",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "VpcId": {
          "Ref": "goauthapivpc70352260",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "goauthapialbtargetgroupD6F4F6F0": {
      "Properties": {
        "HealthCheckIntervalSeconds": 60,
        "HealthCheckPath": "/health",
        "Matcher": {
          "HttpCode": "200",
        },
        "Name": "go-auth-api-alb-target-group",
        "Port": 3000,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "goauthapivpc70352260",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "goauthapialiasrecordF03F939E": {
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::Join": [
              "",
              [
                "dualstack.",
                {
                  "Fn::GetAtt": [
                    "goauthapialb7417EE95",
                    "DNSName",
                  ],
                },
              ],
            ],
          },
          "HostedZoneId": {
            "Fn::GetAtt": [
              "goauthapialb7417EE95",
              "CanonicalHostedZoneID",
            ],
          },
        },
        "HostedZoneId": {
          "Ref": "SsmParameterValuestagegoauthapidnszoneIDC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Name": "",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "goauthapiappprivatesubnet1aDefaultRoute59BE4E2D": {
      "DependsOn": [
        "goauthapiigwattachment",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "goauthapiigw",
        },
        "RouteTableId": {
          "Ref": "goauthapiappprivatesubnet1aRouteTable7D5BA6AC",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "goauthapiappprivatesubnet1aRouteTable7D5BA6AC": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "go-auth-api-app-private-subnet-1a",
          },
        ],
        "VpcId": {
          "Ref": "goauthapivpc70352260",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "goauthapiappprivatesubnet1aRouteTableAssociationEDAFE20F": {
      "Properties": {
        "RouteTableId": {
          "Ref": "goauthapiappprivatesubnet1aRouteTable7D5BA6AC",
        },
        "SubnetId": {
          "Ref": "goauthapiappprivatesubnet1aSubnet2B52AED0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "goauthapiappprivatesubnet1aSubnet2B52AED0": {
      "Properties": {
        "AvailabilityZone": "ap-northeast-1a",
        "CidrBlock": "10.0.11.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": "go-auth-api-app-private-subnet-1a",
          },
        ],
        "VpcId": {
          "Ref": "goauthapivpc70352260",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "goauthapiappprivatesubnet1cDefaultRoute42C64BBB": {
      "DependsOn": [
        "goauthapiigwattachment",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "goauthapiigw",
        },
        "RouteTableId": {
          "Ref": "goauthapiappprivatesubnet1cRouteTableA4BBA8B5",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "goauthapiappprivatesubnet1cRouteTableA4BBA8B5": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "go-auth-api-app-private-subnet-1c",
          },
        ],
        "VpcId": {
          "Ref": "goauthapivpc70352260",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "goauthapiappprivatesubnet1cRouteTableAssociation3EC04610": {
      "Properties": {
        "RouteTableId": {
          "Ref": "goauthapiappprivatesubnet1cRouteTableA4BBA8B5",
        },
        "SubnetId": {
          "Ref": "goauthapiappprivatesubnet1cSubnet3B04A513",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "goauthapiappprivatesubnet1cSubnet3B04A513": {
      "Properties": {
        "AvailabilityZone": "ap-northeast-1c",
        "CidrBlock": "10.0.12.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": "go-auth-api-app-private-subnet-1c",
          },
        ],
        "VpcId": {
          "Ref": "goauthapivpc70352260",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "goauthapiapppublicsubnet1aDefaultRoute062449F5": {
      "DependsOn": [
        "goauthapiigwattachment",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "goauthapiigw",
        },
        "RouteTableId": {
          "Ref": "goauthapiapppublicsubnet1aRouteTable324B777C",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "goauthapiapppublicsubnet1aRouteTable324B777C": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "go-auth-api-app-public-subnet-1a",
          },
        ],
        "VpcId": {
          "Ref": "goauthapivpc70352260",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "goauthapiapppublicsubnet1aRouteTableAssociation2B6018D6": {
      "Properties": {
        "RouteTableId": {
          "Ref": "goauthapiapppublicsubnet1aRouteTable324B777C",
        },
        "SubnetId": {
          "Ref": "goauthapiapppublicsubnet1aSubnet35BBFA9E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "goauthapiapppublicsubnet1aSubnet35BBFA9E": {
      "Properties": {
        "AvailabilityZone": "ap-northeast-1a",
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": "go-auth-api-app-public-subnet-1a",
          },
        ],
        "VpcId": {
          "Ref": "goauthapivpc70352260",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "goauthapiapppublicsubnet1cDefaultRouteCB680EBF": {
      "DependsOn": [
        "goauthapiigwattachment",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "goauthapiigw",
        },
        "RouteTableId": {
          "Ref": "goauthapiapppublicsubnet1cRouteTable33262C05",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "goauthapiapppublicsubnet1cRouteTable33262C05": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "go-auth-api-app-public-subnet-1c",
          },
        ],
        "VpcId": {
          "Ref": "goauthapivpc70352260",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "goauthapiapppublicsubnet1cRouteTableAssociationA0868B6A": {
      "Properties": {
        "RouteTableId": {
          "Ref": "goauthapiapppublicsubnet1cRouteTable33262C05",
        },
        "SubnetId": {
          "Ref": "goauthapiapppublicsubnet1cSubnet13708802",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "goauthapiapppublicsubnet1cSubnet13708802": {
      "Properties": {
        "AvailabilityZone": "ap-northeast-1c",
        "CidrBlock": "10.0.2.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": "go-auth-api-app-public-subnet-1c",
          },
        ],
        "VpcId": {
          "Ref": "goauthapivpc70352260",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "goauthapibastion919C9C17": {
      "DependsOn": [
        "goauthapibastionInstanceRole33091702",
      ],
      "Properties": {
        "AvailabilityZone": "ap-northeast-1a",
        "IamInstanceProfile": {
          "Ref": "goauthapibastionInstanceProfile0E22F7EB",
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amikernel510hvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t3.micro",
        "KeyName": "go-auth-api-bastion-key",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "goauthapibastionsg60D7922E",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "goauthapiapppublicsubnet1aSubnet35BBFA9E",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "go-auth-api-bastion",
          },
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "goauthapibastionInstanceProfile0E22F7EB": {
      "Properties": {
        "Roles": [
          {
            "Ref": "goauthapibastionInstanceRole33091702",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "goauthapibastionInstanceRole33091702": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "go-auth-api-bastion",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "goauthapibastionkey": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KeyName": "go-auth-api-bastion-key",
      },
      "Type": "AWS::EC2::KeyPair",
      "UpdateReplacePolicy": "Delete",
    },
    "goauthapibastionsg60D7922E": {
      "Properties": {
        "GroupDescription": "security group for bastion",
        "GroupName": "go-auth-api-bastion-sg",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:22",
            "FromPort": 22,
            "IpProtocol": "tcp",
            "ToPort": 22,
          },
        ],
        "VpcId": {
          "Ref": "goauthapivpc70352260",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "goauthapiclusterA00E79D9": {
      "Properties": {
        "ClusterName": "go-auth-api-cluster",
      },
      "Type": "AWS::ECS::Cluster",
    },
    "goauthapidb9302DA9B": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AllocatedStorage": "20",
        "AvailabilityZone": "ap-northeast-1a",
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t3.micro",
        "DBInstanceIdentifier": "go-auth-api-db",
        "DBName": {
          "Ref": "SsmParameterValuestagegoauthapidbdatabaseC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "DBSubnetGroupName": {
          "Ref": "goauthapidbSubnetGroup5F9B29FA",
        },
        "Engine": "mysql",
        "MasterUserPassword": "{{resolve:ssm-secure:/stage/go-auth-api/db/pass}}",
        "MasterUsername": {
          "Ref": "SsmParameterValuestagegoauthapidbuserC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Port": {
          "Ref": "SsmParameterValuestagegoauthapidbportC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "PubliclyAccessible": false,
        "StorageEncrypted": true,
        "StorageType": "gp2",
        "VPCSecurityGroups": [
          {
            "Fn::GetAtt": [
              "goauthapidbsgE482D50B",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "goauthapidbSubnetGroup5F9B29FA": {
      "Properties": {
        "DBSubnetGroupDescription": "Subnet group for go-auth-api-db database",
        "SubnetIds": [
          {
            "Ref": "goauthapiappprivatesubnet1aSubnet2B52AED0",
          },
          {
            "Ref": "goauthapiappprivatesubnet1cSubnet3B04A513",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "goauthapidbsgE482D50B": {
      "Properties": {
        "GroupDescription": "security group for auth db",
        "GroupName": "go-auth-api-db-sg",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "goauthapivpc70352260",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "goauthapidbsgfromTestStackgoauthapibastionsg657A4590IndirectPortB07CBB9F": {
      "Properties": {
        "Description": "Allow db access from bastion",
        "FromPort": {
          "Ref": "SsmParameterValuestagegoauthapidbportC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "GroupId": {
          "Fn::GetAtt": [
            "goauthapidbsgE482D50B",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "goauthapibastionsg60D7922E",
            "GroupId",
          ],
        },
        "ToPort": {
          "Ref": "SsmParameterValuestagegoauthapidbportC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "goauthapidbsgfromTestStackgoauthapiservicesg0551BE35IndirectPort748D65A3": {
      "Properties": {
        "Description": "Allow db access from api",
        "FromPort": {
          "Ref": "SsmParameterValuestagegoauthapidbportC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "GroupId": {
          "Fn::GetAtt": [
            "goauthapidbsgE482D50B",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "goauthapiservicesgC5DDA15E",
            "GroupId",
          ],
        },
        "ToPort": {
          "Ref": "SsmParameterValuestagegoauthapidbportC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "goauthapiigw": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "go-auth-api-igw",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "goauthapiigwattachment": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "goauthapiigw",
        },
        "VpcId": {
          "Ref": "goauthapivpc70352260",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "goauthapilog92D7EFB8": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": "/aws/cdk/ecs-alb-fargate-service/web",
        "RetentionInDays": 1,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "goauthapiserviceServiceBF0B3AF3": {
      "DependsOn": [
        "goauthapialbgoauthapialbhttpslistener64C5C27A",
        "goauthapitaskTaskRole4F553A1F",
      ],
      "Properties": {
        "Cluster": {
          "Ref": "goauthapiclusterA00E79D9",
        },
        "DeploymentConfiguration": {
          "Alarms": {
            "AlarmNames": [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "go-auth-api",
            "ContainerPort": 3000,
            "TargetGroupArn": {
              "Ref": "goauthapialbtargetgroupD6F4F6F0",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "goauthapiservicesgC5DDA15E",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "goauthapiappprivatesubnet1aSubnet2B52AED0",
              },
              {
                "Ref": "goauthapiappprivatesubnet1cSubnet3B04A513",
              },
            ],
          },
        },
        "ServiceName": "go-auth-api-service",
        "TaskDefinition": {
          "Ref": "goauthapitask973C00CB",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "goauthapiservicesgC5DDA15E": {
      "Properties": {
        "GroupDescription": "TestStack/go-auth-api-service-sg",
        "GroupName": "go-auth-api-service-sg",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "goauthapivpc70352260",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "goauthapiservicesgfromTestStackgoauthapialbsg86DB1AB53000D2F9394B": {
      "Properties": {
        "Description": "Allow alb access",
        "FromPort": 3000,
        "GroupId": {
          "Fn::GetAtt": [
            "goauthapiservicesgC5DDA15E",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "goauthapialbsgF17A1428",
            "GroupId",
          ],
        },
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "goauthapitask973C00CB": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "cmd/auth-api-server",
            ],
            "Environment": [
              {
                "Name": "MYSQL_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "goauthapidb9302DA9B",
                    "Endpoint.Address",
                  ],
                },
              },
              {
                "Name": "MYSQL_PORT",
                "Value": {
                  "Ref": "SsmParameterValuestagegoauthapidbportC96584B6F00A464EAD1953AFF4B05118Parameter",
                },
              },
              {
                "Name": "MYSQL_USER",
                "Value": {
                  "Ref": "SsmParameterValuestagegoauthapidbuserC96584B6F00A464EAD1953AFF4B05118Parameter",
                },
              },
              {
                "Name": "MYSQL_DATABASE",
                "Value": {
                  "Ref": "SsmParameterValuestagegoauthapidbdatabaseC96584B6F00A464EAD1953AFF4B05118Parameter",
                },
              },
            ],
            "Essential": true,
            "Image": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ".dkr.ecr.",
                  {
                    "Ref": "AWS::Region",
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/",
                  {
                    "Fn::Sub": "cdk-hnb659fds-container-assets-\${AWS::AccountId}-\${AWS::Region}",
                  },
                  ":a7e543eb2e35d5af15f43dcc995a7b578566255c",
                ],
              ],
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "goauthapilog92D7EFB8",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "ecs",
              },
            },
            "Name": "go-auth-api",
            "PortMappings": [
              {
                "AppProtocol": "http",
                "ContainerPort": 3000,
                "HostPort": 3000,
                "Name": "http-port-mapping",
                "Protocol": "tcp",
              },
            ],
            "Secrets": [
              {
                "Name": "MYSQL_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter/stage/go-auth-api/db/pass",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "ecsTaskExecutionRole34F54B99",
            "Arn",
          ],
        },
        "Family": "go-auth-api-task",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "goauthapitaskTaskRole4F553A1F",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "goauthapitaskTaskRole4F553A1F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "goauthapivpc70352260": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "go-auth-api-vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "goauthapivpceecrapi50EF525F": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "goauthapivpceecrapiSecurityGroupB50C5C40",
              "GroupId",
            ],
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".ecr.api",
            ],
          ],
        },
        "SubnetIds": [
          {
            "Ref": "goauthapiappprivatesubnet1aSubnet2B52AED0",
          },
          {
            "Ref": "goauthapiappprivatesubnet1cSubnet3B04A513",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "goauthapivpc70352260",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "goauthapivpceecrapiSecurityGroupB50C5C40": {
      "Properties": {
        "GroupDescription": "TestStack/go-auth-api-vpce-ecr-api/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "goauthapivpc70352260",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "goauthapivpc70352260",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "VpcId": {
          "Ref": "goauthapivpc70352260",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "goauthapivpceecrdkr34864192": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "goauthapivpceecrdkrSecurityGroup23FD3CCE",
              "GroupId",
            ],
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".ecr.dkr",
            ],
          ],
        },
        "SubnetIds": [
          {
            "Ref": "goauthapiappprivatesubnet1aSubnet2B52AED0",
          },
          {
            "Ref": "goauthapiappprivatesubnet1cSubnet3B04A513",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "goauthapivpc70352260",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "goauthapivpceecrdkrSecurityGroup23FD3CCE": {
      "Properties": {
        "GroupDescription": "TestStack/go-auth-api-vpce-ecr-dkr/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "goauthapivpc70352260",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "goauthapivpc70352260",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "VpcId": {
          "Ref": "goauthapivpc70352260",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "goauthapivpcelogs51747E4F": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "goauthapivpcelogsSecurityGroup7A815340",
              "GroupId",
            ],
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".logs",
            ],
          ],
        },
        "SubnetIds": [
          {
            "Ref": "goauthapiappprivatesubnet1aSubnet2B52AED0",
          },
          {
            "Ref": "goauthapiappprivatesubnet1cSubnet3B04A513",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "goauthapivpc70352260",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "goauthapivpcelogsSecurityGroup7A815340": {
      "Properties": {
        "GroupDescription": "TestStack/go-auth-api-vpce-logs/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "goauthapivpc70352260",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "goauthapivpc70352260",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "VpcId": {
          "Ref": "goauthapivpc70352260",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "goauthapivpces39B399B6F": {
      "Properties": {
        "RouteTableIds": [
          {
            "Ref": "goauthapiappprivatesubnet1aRouteTable7D5BA6AC",
          },
          {
            "Ref": "goauthapiappprivatesubnet1cRouteTableA4BBA8B5",
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".s3",
            ],
          ],
        },
        "VpcEndpointType": "Gateway",
        "VpcId": {
          "Ref": "goauthapivpc70352260",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "goauthapivpcesecretmng07686B27": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "goauthapivpcesecretmngSecurityGroup55187B2B",
              "GroupId",
            ],
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".secretsmanager",
            ],
          ],
        },
        "SubnetIds": [
          {
            "Ref": "goauthapiappprivatesubnet1aSubnet2B52AED0",
          },
          {
            "Ref": "goauthapiappprivatesubnet1cSubnet3B04A513",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "goauthapivpc70352260",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "goauthapivpcesecretmngSecurityGroup55187B2B": {
      "Properties": {
        "GroupDescription": "TestStack/go-auth-api-vpce-secret-mng/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "goauthapivpc70352260",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "goauthapivpc70352260",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "VpcId": {
          "Ref": "goauthapivpc70352260",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "goauthapivpcessm6DC7977A": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "goauthapivpcessmSecurityGroupDC1ECAF1",
              "GroupId",
            ],
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".ssm",
            ],
          ],
        },
        "SubnetIds": [
          {
            "Ref": "goauthapiappprivatesubnet1aSubnet2B52AED0",
          },
          {
            "Ref": "goauthapiappprivatesubnet1cSubnet3B04A513",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "goauthapivpc70352260",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "goauthapivpcessmSecurityGroupDC1ECAF1": {
      "Properties": {
        "GroupDescription": "TestStack/go-auth-api-vpce-ssm/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "goauthapivpc70352260",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "goauthapivpc70352260",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "VpcId": {
          "Ref": "goauthapivpc70352260",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
